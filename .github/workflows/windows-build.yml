name: Build Touhou LostWord ClientAPI with Hikari (Windows)

on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]
  workflow_dispatch:

env:
  HIKARI_COMMIT_HASH: 'dfb9a48616df758fae88acf7fc426b9b208ba30d'
  VCPKG_COMMIT_ID: 'dd3097e305afa53f7b4312371f62058d2e665320'
  REVERSION:
    '1'
  VCPKG_REVERSION:
    '2'

jobs:
  build-hikari-toolchain:
    name: Build Hikari LLVM Toolchain from Source
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: TheMrMilchmann/setup-msvc-dev@v3
        with:
          arch: x64

      - name: Cache Hikari LLVM Toolchain
        id: cache-hikari
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/hikari-install

          key: ${{ runner.os }}-hikari-${{ env.HIKARI_COMMIT_HASH }}-${{ env.REVERSION }}

      - name: Build and Install Hikari LLVM
        if: steps.cache-hikari.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          echo "Cache not found, building Hikari LLVM from source. This will take a very long time..."
          
          git clone --recursive https://github.com/Aethereux/Hikari-LLVM19.git hikari-source
          cd hikari-source
          git checkout ${{ env.HIKARI_COMMIT_HASH }}
          
          mkdir build
          cd build
          
          cmake -G Ninja `
            -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/hikari-install `
            -DCMAKE_C_COMPILER=cl.exe `
            -DCMAKE_CXX_COMPILER=cl.exe `
            -DCMAKE_BUILD_TYPE=Release `
            -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded `
            -DLLVM_ENABLE_PROJECTS="clang;lld" `
            -DLLVM_TARGETS_TO_BUILD="X86" `
            -DLLVM_ENABLE_ZSTD=OFF `
            -DLLVM_INCLUDE_TESTS=OFF `
            -DLLVM_INCLUDE_EXAMPLES=OFF `
            -DLLVM_INCLUDE_UTILS=OFF `
            -DLLVM_INCLUDE_BENCHMARKS=OFF `
            -DLLVM_BUILD_TOOLS=ON `
            -DLLVM_TOOL_LLVM_LIB_BUILD=ON `
            -DLLVM_INSTALL_TOOLCHAIN_ONLY=ON `
            -DLLVM_OPTIMIZED_TABLEGEN=ON `
            ../llvm
            
          ninja
          
          ninja install

      - name: Cache vcpkg dependencies
        id: cache-vcpkg
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}/vcpkg
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('**/vcpkg.json') }}-${{ env.VCPKG_COMMIT_ID }}-${{ env.VCPKG_REVERSION }}

      - name: Cài đặt dependencies với vcpkg
        if: steps.cache-vcpkg.outputs.cache-hit != 'true'
        uses: lukka/run-vcpkg@v11
        env:
          VCPKG_BUILD_TYPE: release
          VCPKG_DEFAULT_TRIPLET: x64-windows-static
          VCPKG_DEFAULT_HOST_TRIPLET: x64-windows-static
          VCPKG_OVERLAY_TRIPLETS: ${{ github.workspace }}/triplets
        with:
          runVcpkgInstall: true
          vcpkgGitCommitId: ${{ env.VCPKG_COMMIT_ID }}
          vcpkgDirectory: ${{ runner.temp }}/vcpkg

      - name: Upload Hikari Toolchain as Artifact
        if: steps.cache-hikari.outputs.cache-hit != 'true'
        uses: actions/upload-artifact@v4
        with:
          name: hikari-toolchain-windows
          path: ${{ github.workspace }}/hikari-install

  build-windows-app:
    name: Windows (with Hikari LLVM)
    runs-on: windows-latest
    needs: build-hikari-toolchain

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - uses: actions/checkout@v4
        with:
          repository: ReiZen-Team/TouhouLostWordClientAPI
          path: source_repo
          token: ${{ secrets.GH_TOKEN }}

      - name: Synchronize source code
        shell: pwsh
        run: Copy-Item -Path source_repo/CPP/* -Destination . -Recurse -Force
      
      - uses: TheMrMilchmann/setup-msvc-dev@v3
        with:
          arch: x64
      
      - name: Restore Hikari Toolchain from Cache or Artifact
        id: restore-hikari
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/hikari-install

          key: ${{ runner.os }}-hikari-${{ env.HIKARI_COMMIT_HASH }}-${{ env.REVERSION }}

      - name: Set Hikari Environment Path
        shell: pwsh
        run: |
          $hikariBinPath = "${{ github.workspace }}\hikari-install\bin"
          echo "HIKARI_BIN_PATH=$hikariBinPath" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo $hikariBinPath | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          
      - name: Cài đặt Meson và Ninja (pip)
        run: pip install meson ninja

      - name: Cache vcpkg dependencies
        id: cache-vcpkg
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}/vcpkg
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('**/vcpkg.json') }}-${{ env.VCPKG_COMMIT_ID }}-${{ env.VCPKG_REVERSION }}

      - name: Cài đặt dependencies với vcpkg
        if: steps.cache-vcpkg.outputs.cache-hit != 'true'
        uses: lukka/run-vcpkg@v11
        env:
          VCPKG_BUILD_TYPE: release
          VCPKG_DEFAULT_TRIPLET: x64-windows-static
          VCPKG_DEFAULT_HOST_TRIPLET: x64-windows-static
          VCPKG_OVERLAY_TRIPLETS: ${{ github.workspace }}/triplets
        with:
          runVcpkgInstall: true
          vcpkgGitCommitId: ${{ env.VCPKG_COMMIT_ID }}
          vcpkgDirectory: ${{ runner.temp }}/vcpkg

      - name: Cấu hình CMake với Hikari LLVM
        env:
          VCPKG_TARGET_TRIPLET: x64-windows-static
          CMAKE_MESSAGE_LOG_LEVEL: ERROR
        run: |
          cmake -B build -S . `
            -G "Ninja" `
            -DCMAKE_BUILD_TYPE=Release `
            -DCMAKE_TOOLCHAIN_FILE=${{ runner.temp }}/vcpkg/scripts/buildsystems/vcpkg.cmake `
            -DCMAKE_C_COMPILER="$env:HIKARI_BIN_PATH\clang-cl.exe" `
            -DCMAKE_CXX_COMPILER="$env:HIKARI_BIN_PATH\clang-cl.exe" `
            -DCMAKE_LINKER="$env:HIKARI_BIN_PATH\lld-link.exe" `
            -DCMAKE_AR="$env:HIKARI_BIN_PATH\llvm-lib.exe" `
            -DCMAKE_CXX_FLAGS="/EHsc /D_HAS_EXCEPTIONS=1" `
            -DHIKARI=ON

      - name: Build
        run: cmake --build build --config Release --verbose
        
      - name: Tải lên Artifact
        uses: actions/upload-artifact@v4
        with:
          name: TouhouLWClient-windows-hikari
          path: ${{github.workspace}}/build/**/TouhouLWClient.exe